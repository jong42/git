b = matrix(c(9,8,7,6,5,4,3,2,1),nrow =3, ncol=3)
a * b
a = matrix(c(1,2,3,4,5,6,7,8,9),nrow =3, ncol=3)
b = matrix(c(9,8,7,6,5,4,3,2,1),nrow =3, ncol=3)
a * b
a %*% b
a = matrix(c(1,2,3,4,5,6,7,8,9),nrow =3, ncol=3, byrow = TRUE)
b = matrix(c(9,8,7,6,5,4,3,2,1),nrow =3, ncol=3, byrow = TRUE)
a %*% b
solve(a)
solve(b)
a = matrix(c(1,2,3,4,5,6,7,8,9),nrow =3, ncol=3, byrow = TRUE)
b = matrix(c(9,8,7,6,5,4,3,2,1),nrow =3, ncol=3, byrow = TRUE)
a %*% b
c = matrix(c(5,1,0,3,-1,2,4,0,-1),nrow =3, ncol=3, byrow = TRUE)
solve(c)
2 * (a %*% b) + 3 * res_mat_0
a = matrix(c(1,2,3,4,5,6,7,8,9),nrow =3, ncol=3, byrow = TRUE)
b = matrix(c(9,8,7,6,5,4,3,2,1),nrow =3, ncol=3, byrow = TRUE)
res_mat_0 = matrix(c(0,2,0,3,0,4,4,0,1),nrow =3, ncol=3, byrow = TRUE)
res_mat_1 = matrix(c(1,0,0,0,1,0,0,0,1),nrow =3, ncol=3, byrow = TRUE)
a %*% b
c = matrix(c(5,1,0,3,-1,2,4,0,-1),nrow =3, ncol=3, byrow = TRUE)
solve(c)
2 * (a %*% b) + 3 * res_mat_0
2 * (t(a) %*% b) + 3 * res_mat_0
t(a) + 3 * res_mat_0
2 * t(a) + 3 * res_mat_0
2 * t(c) %*% (solve(c)) + 3 * res_mat_1
2 * t(solve(c)) * c
c_inv = solve(c)
c_inv
t(c_inv)
2 * t(c_inv) %*% c
getwd()
setwd("/home/xi86xev/schreibtisch")
setwd("/home/xi86xev/Schreibtisch")
setwd("/home/xi86xev/Schreibtisch/homework1_management")
d = read.csv("00_smallaphiddataset.csv")
View(d)
d = read.csv("00_smallaphiddataset.csv",sep=";")
View(d)
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE)
View(d)
View(d)
?read.csv()
d = read.csv("00_smallaphiddataset.csv",sep=";",header=FALSE)
View(d)
d = read.csv("00_smallaphiddataset.csv",sep=";",header=FALSE,skip=1)
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE,skip=1)
View(d)
d = d[-1:2,]
d = d[-(1:2),]
View(d)
View(d)
unique(d$sample_date)
length(unique(d$sample_date))
unique(d$sample_date)
hist(d$sample_date)
?hist()
density(d$sample_date)
barplot(d$sample_date)
plot(d$sample_date)
plot(d$sample_date, type="h")
unique(d$state)
warnings()
unique(d$state)
plot(d$state)
is.na(d$sample_date)
unique(is.na(d$sample_date))
unique(d$state)
unique(is.na(d$state))
unique(d$station)
d$station[which(d$station=="Lancester"|d$station=="lancaster"|d$station=="Lancaste")] = "Lancaster"
unique(d$station)
d$station[which(d$station=="PERRY")] = "Perry"
unique(d$station)
d$station[which(d$station=="Hancokk")] = "Hancock"
d$station[which(d$station=="Hancokk")] = "Hancock"
unique(d$station)
d[which(d$station="MorrisIL"),]
d[which(d$station=="MorrisIL"),]
unique(d$station)
d[which(d$station=="MorrisMN"),]
d$station[which(d$station=="MorrisIL"|d$station=="MorrisMN")] = "Morris"
which(d$station=="MorrisIL"|d$station=="MorrisMN")
unique(d$station)
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE,skip=1)
d = d[-(1:2),]
# sample_date seems to be fine; no inconsistent values; no missing values
unique(d$sample_date)
unique(is.na(d$sample_date))
# state seems to be fine; no inconsistent values; no missing values;
# no duplicate abbreviations for the same state
unique(d$state)
unique(is.na(d$state))
plot(d$state)
unique(d$station)
# inconsistent values: abbreviations in capital letters
#                      typos and different writings at Lancaster
# correct spelling errors
d$station[which(d$station=="Lancester"|d$station=="lancaster"|d$station=="Lancaste")] = "Lancaster"
d$station[which(d$station=="Hancokk")] = "Hancock"
d$station[which(d$station=="PERRY")] = "Perry"
unique(d$station)
d$station[which(d$station=="MorrisIL"|d$station=="MorrisMN")] = factor("Morris")
d$station = factor(d$station,levels=c(levels(d$station), "Morris"))
d$station[which(d$station=="Lancester"|d$station=="lancaster"|d$station=="Lancaste")] = "Lancaster"
d$station[which(d$station=="Hancokk")] = "Hancock"
d$station[which(d$station=="PERRY")] = "Perry"
d$station[which(d$station=="MorrisIL"|d$station=="MorrisMN")] = factor("Morris")
unique(d$station)
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE,skip=1)
d = d[-(1:2),]
# sample_date seems to be fine; no inconsistent values; no missing values
unique(d$sample_date)
unique(is.na(d$sample_date))
# state seems to be fine; no inconsistent values; no missing values;
# no duplicate abbreviations for the same state
unique(d$state)
unique(is.na(d$state))
plot(d$state)
unique(d$station)
# inconsistent values: abbreviations in capital letters
#                      typos and different writings at Lancaster
d$station = factor(d$station,levels=c(levels(d$station), "Morris"))
d$station[which(d$station=="Lancester"|d$station=="lancaster"|d$station=="Lancaste")] = "Lancaster"
d$station[which(d$station=="Hancokk")] = "Hancock"
d$station[which(d$station=="PERRY")] = "Perry"
d$station[which(d$station=="MorrisIL"|d$station=="MorrisMN")] = factor("Morris")
unique(d$station)
plot(d$station)
length(d[which(d$station=="DPAC"),])
length(d[which(d$station=="NEPAC"),])
length(d[which(d$station=="SEPAC"),])
length(d[which(d$station=="PEPAC"),])
d$station[which(d$station=="NEPAC"|d$station=="DPAC"|d$station=="SEPAC"|d$station=="PPAC")] == NA
d$station[which(d$station=="NEPAC"|d$station=="DPAC"|d$station=="SEPAC"|d$station=="PPAC")] = NA
unique(d$station)
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE,skip=1)
d = d[-(1:2),]
# sample_date seems to be fine; no inconsistent values; no missing values
unique(d$sample_date)
unique(is.na(d$sample_date))
# state seems to be fine; no inconsistent values; no missing values;
# no duplicate abbreviations for the same state
unique(d$state)
unique(is.na(d$state))
plot(d$state)
unique(d$station)
# inconsistent values: abbreviations in capital letters
#                      typos and different writings at Lancaster
# station names NEPAC, SEPAC, PPAC, DPAC, ACRE, PIT deviate from the others in form, but since
# the domain of the column is unknown, they could be legal values, so they are kept
# Add new levels to factor variable
d$station = factor(d$station,levels=c(levels(d$station), "Morris"))
# correct spelling errors
d$station[which(d$station=="Lancester"|d$station=="lancaster"|d$station=="Lancaste")] = "Lancaster"
d$station[which(d$station=="Hancokk")] = "Hancock"
d$station[which(d$station=="PERRY")] = "Perry"
d$station[which(d$station=="MorrisIL"|d$station=="MorrisMN")] = factor("Morris")
unique(d$station)
d$station[which(d$station=="Alington")] = "Arlington"
unique(d$station)
unique(is.na(d$state))
unique(d$station)
plot(d$station)
unique(d$species)
plot(d$species)
unique(d$species)
unique(d$sex)
plot(d$sex)
d$sex[which(d$sex)=="male"] = "M"
d$sex[which(d$sex)=="female"] = "F"
d$sex[which(d$sex=="male")] = "M"
d$sex[which(d$sex=="female")] = "F"
unique(d$sex)
unique(d$count)
unique(is.na(d$species))
unique(d$sex)
unique(d$count)
unique(is.na(d$count))
unique(d$count)
class(d$count)
d$count[which(d$count=="<3"|d$count=="?")|d$count=="??"] = NA
unique(d$count)
View(d)
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE,skip=1)
d = d[-(1:2),]
# sample_date seems to be fine; no inconsistent values; no missing values
unique(d$sample_date)
unique(is.na(d$sample_date))
# state seems to be fine; no inconsistent values; no missing values;
# no duplicate abbreviations for the same state
unique(d$state)
unique(is.na(d$state))
plot(d$state)
# inconsistent values: abbreviations in capital letters
#                      typos and different writings at Lancaster
# station names NEPAC, SEPAC, PPAC, DPAC, ACRE, PIT deviate from the others in form, but since
# the domain of the column is unknown, they could be legal values, so they are kept
unique(d$station)
# no missing values
unique(is.na(d$state))
# Add new levels to factor variable
d$station = factor(d$station,levels=c(levels(d$station), "Morris"))
# correct spelling errors
d$station[which(d$station=="Lancester"|d$station=="lancaster"|d$station=="Lancaste")] = "Lancaster"
d$station[which(d$station=="Hancokk")] = "Hancock"
d$station[which(d$station=="PERRY")] = "Perry"
d$station[which(d$station=="Alington")] = "Arlington"
d$station[which(d$station=="MorrisIL"|d$station=="MorrisMN")] = factor("Morris")
unique(d$station)
plot(d$station)
# no incosistent values
unique(d$species)
# no missing values
unique(is.na(d$species))
d$species[which(d$species)=="unknown"] = NA
# two different writing styles
unique(d$sex)
# no missing values
unique(d$sex)
plot(d$sex)
d$sex[which(d$sex=="male")] = "M"
d$sex[which(d$sex=="female")] = "F"
# inconsistent values are existing
unique(d$count)
# class is factor. should be numeric
class(d$count)
# no missing values
unique(is.na(d$count))
# harmonize values
d$count[which(d$count=="<3"|d$count=="?"|d$count=="??")] = NA
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE,skip=1)
d = d[-(1:2),]
# sample_date seems to be fine; no inconsistent values; no missing values
unique(d$sample_date)
unique(is.na(d$sample_date))
# state seems to be fine; no inconsistent values; no missing values;
# no duplicate abbreviations for the same state
unique(d$state)
unique(is.na(d$state))
plot(d$state)
# inconsistent values: abbreviations in capital letters
#                      typos and different writings at Lancaster
# station names NEPAC, SEPAC, PPAC, DPAC, ACRE, PIT deviate from the others in form, but since
# the domain of the column is unknown, they could be legal values, so they are kept
unique(d$station)
# no missing values
unique(is.na(d$state))
# Add new levels to factor variable
d$station = factor(d$station,levels=c(levels(d$station), "Morris"))
# correct spelling errors
d$station[which(d$station=="Lancester"|d$station=="lancaster"|d$station=="Lancaste")] = "Lancaster"
d$station[which(d$station=="Hancokk")] = "Hancock"
d$station[which(d$station=="PERRY")] = "Perry"
d$station[which(d$station=="Alington")] = "Arlington"
d$station[which(d$station=="MorrisIL"|d$station=="MorrisMN")] = factor("Morris")
unique(d$station)
plot(d$station)
# no incosistent values
unique(d$species)
# no missing values
unique(is.na(d$species))
d$species[which(d$species=="unknown")] = NA
# two different writing styles
unique(d$sex)
# no missing values
unique(d$sex)
plot(d$sex)
d$sex[which(d$sex=="male")] = "M"
d$sex[which(d$sex=="female")] = "F"
# inconsistent values are existing
unique(d$count)
# class is factor. should be numeric
class(d$count)
# no missing values
unique(is.na(d$count))
# harmonize values
d$count[which(d$count=="<3"|d$count=="?"|d$count=="??")] = NA
unique(d$count)
d$count[which(d$count=="<3"|d$count=="?"|d$count=="??"|d$count=="")] = NA
unique(d$count)
as.numeric(d$count)
View(d)
as.character(d$count)
as.numeric(as.character(d$count))
d$count = as.numeric(as.character(d$count))
View(d)
setwd("/home/xi86xev/Schreibtisch/homework1_management")
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE,skip=1)
d = d[-(1:2),]
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE,skip=1)
setwd("/home/xi86xev/Schreibtisch/homework1_management")
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE,skip=1)
d = d[-(1:2),]
unique(d$sample_date)
unique(is.na(d$state))
unique(is.na(d$sample_date))
plot(d$state)
?plot()
plot(d$state, ylab ="frequency", xlab = "state")
unique(is.na(d$station))
unique(d$station)
unique(is.na(d$station))
# Add new levels to factor variable
d$station = factor(d$station,levels=c(levels(d$station), "Morris"))
# correct spelling errors
d$station[which(d$station=="Lancester"|d$station=="lancaster"|d$station=="Lancaste")] = "Lancaster"
d$station[which(d$station=="Hancokk")] = "Hancock"
d$station[which(d$station=="PERRY")] = "Perry"
d$station[which(d$station=="Alington")] = "Arlington"
d$station[which(d$station=="MorrisIL"|d$station=="MorrisMN")] = factor("Morris")
unique(d$station)
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE,skip=1)
d = d[-(1:2),]
# sample_date seems to be fine; no inconsistent values; no missing values
unique(d$sample_date)
unique(is.na(d$sample_date))
# state seems to be fine; no inconsistent values; no missing values;
# no duplicate abbreviations for the same state
unique(d$state)
unique(is.na(d$state))
plot(d$state, ylab ="frequency", xlab = "state")
# inconsistent values: abbreviations in capital letters
#                      typos and different writings at Lancaster
# station names NEPAC, SEPAC, PPAC, DPAC, ACRE, PIT deviate from the others in form, but since
# the domain of the column is unknown, they could be legal values, so they are kept
unique(d$station)
# correct spelling errors
d$station[which(d$station=="Lancester"|d$station=="lancaster"|d$station=="Lancaste")] = "Lancaster"
d$station[which(d$station=="Hancokk")] = "Hancock"
d$station[which(d$station=="PERRY")] = "Perry"
d$station[which(d$station=="Alington")] = "Arlington"
d$station[which(d$station=="MorrisIL"|d$station=="MorrisMN")] = factor("Morris")
unique(d$station)
d_test = d[which(d$state=="KY"),]
View(d_test)
setwd("/home/xi86xev/Schreibtisch/homework1_management")
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE,skip=1)
d = d[-(1:2),]
# sample_date seems to be fine; no inconsistent values; no missing values
unique(d$sample_date)
unique(is.na(d$sample_date))
# state seems to be fine; no inconsistent values; no missing values;
# no duplicate abbreviations for the same state
unique(d$state)
unique(is.na(d$state))
plot(d$state, ylab ="frequency", xlab = "state")
# inconsistent values: abbreviations in capital letters
#                      typos and different writings at Lancaster
# station names NEPAC, SEPAC, PPAC, DPAC, ACRE, PIT deviate from the others in form, but since
# the domain of the column is unknown, they could be legal values, so they are kept
unique(d$station)
# no missing values
unique(is.na(d$station))
# Add new levels to factor variable
d$station = factor(d$station,levels=c(levels(d$station), "Morris"))
# correct spelling errors
d$station[which(d$station=="Lancester"|d$station=="lancaster"|d$station=="Lancaste")] = "Lancaster"
d$station[which(d$station=="Hancokk")] = "Hancock"
d$station[which(d$station=="PERRY")] = "Perry"
d$station[which(d$station=="Alington")] = "Arlington"
d$station[which(d$station=="MorrisIL"|d$station=="MorrisMN")] = factor("Morris")
unique(d$station)
setwd("/home/xi86xev/Schreibtisch/homework1_management")
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE,skip=1)
d = d[-(1:2),]
###############################
### Do basic data cleansing
###############################
# sample_date seems to be fine; no inconsistent values; no missing values
unique(d$sample_date)
unique(is.na(d$sample_date))
# state seems to be fine; no inconsistent values; no missing values;
# no duplicate abbreviations for the same state
unique(d$state)
unique(is.na(d$state))
plot(d$state, ylab ="frequency", xlab = "state")
# station has inconsistent values: abbreviations in capital letters
#                                  typos and different writings at Lancaster
# station names NEPAC, SEPAC, PPAC, DPAC, ACRE, PIT deviate from the others in form, but since
# the domain of the column is unknown, they could be legal values, so they are kept
unique(d$station)
# no missing values
unique(is.na(d$station))
# Add new levels to factor variable
d$station = factor(d$station,levels=c(levels(d$station), "Morris"))
# correct spelling errors
d$station[which(d$station=="Lancester"|d$station=="lancaster"|d$station=="Lancaste")] = "Lancaster"
d$station[which(d$station=="Hancokk")] = "Hancock"
d$station[which(d$station=="PERRY")] = "Perry"
d$station[which(d$station=="Alington")] = "Arlington"
d$station[which(d$station=="MorrisIL"|d$station=="MorrisMN")] = factor("Morris")
unique(d$station)
plot(d$station)
# species has no incosistent values
unique(d$species)
# no missing values
unique(is.na(d$species))
d$species[which(d$species=="unknown")] = NA
# two different writing styles for sex
unique(d$sex)
# no missing values
unique(d$sex)
plot(d$sex)
# harmonize writing style
d$sex[which(d$sex=="male")] = "M"
d$sex[which(d$sex=="female")] = "F"
# inconsistent values are existing for count
unique(d$count)
# class is factor. should be numeric
class(d$count)
# no missing values
unique(is.na(d$count))
# harmonize values
d$count[which(d$count=="<3"|d$count=="?"|d$count=="??"|d$count=="")] = NA
# convert to numeric
d$count = as.numeric(as.character(d$count))
setwd("/home/xi86xev/Schreibtisch/homework1_management")
d = read.csv("00_smallaphiddataset.csv",sep=";",header=TRUE,skip=1)
d = d[-(1:2),]
###############################
### Do basic data cleansing
###############################
# sample_date seems to be fine; no inconsistent values; no missing values
unique(d$sample_date)
unique(is.na(d$sample_date))
# state seems to be fine; no inconsistent values; no missing values;
# no duplicate abbreviations for the same state
unique(d$state)
unique(is.na(d$state))
plot(d$state, ylab ="frequency", xlab = "state")
# station has inconsistent values: abbreviations in capital letters
#                                  typos and different writings at Lancaster
# station names NEPAC, SEPAC, PPAC, DPAC, ACRE, PIT deviate from the others in form, but since
# the domain of the column is unknown, they could be legal values, so they are kept
unique(d$station)
# no missing values
unique(is.na(d$station))
d$station = factor(d$station,levels=c(levels(d$station), "Morris"))
unique(d$station)
correct spelling errors
d$station[which(d$station=="Lancester"|d$station=="lancaster"|d$station=="Lancaste")] = "Lancaster"
d$station[which(d$station=="Hancokk")] = "Hancock"
d$station[which(d$station=="PERRY")] = "Perry"
d$station[which(d$station=="Alington")] = "Arlington"
d$station[which(d$station=="MorrisIL"|d$station=="MorrisMN")] = "Morris"
unique(d$station)
plot(d$station)
unique(d$species)
unique(is.na(d$species))
d$species[which(d$species=="unknown")] = NA
unique(d$sex)
unique(d$sex)
plot(d$sex)
d$sex[which(d$sex=="male")] = "M"
d$sex[which(d$sex=="female")] = "F"
unique(d$count)
class(d$count)
unique(is.na(d$count))
d$count[which(d$count=="<3"|d$count=="?"|d$count=="??"|d$count=="")] = NA
d$count = as.numeric(as.character(d$count))
d$species
d$species = as.character(d$species)
d$species
?gsub()
rm(d_test)
grep("The",d$species,value = TRUE)
test  = grep("The",d$species,value = TRUE)
test  = grep(".",d$species,value = TRUE)
test  = grep("\.",d$species,value = TRUE)
test  = grep("/.",d$species,value = TRUE)
test  = grep("\\.",d$species,value = TRUE)
test  = grep("o",d$species,value = TRUE)
test  = gregexpr("o",d$species,value = TRUE)
test  = gregexpr("o",d$species)
test[1]
test  = regexpr("o",d$species)
test  = regexexec("o",d$species)
test  = regexec("o",d$species)
test[¹]
test[1]
rm(test)
test  = sub("o","",d$species)
test  = sub(".","",d$species)
test  = sub("\.","",d$species)
test  = sub("\\.","",d$species)
test  = sub("\\.*","",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]","",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.]"," ",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\\.]"," ",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz \\.]"," ",d$species)
test  = sub("\\.[\\.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]"," ",d$species)
test  = sub("\\.[\.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]"," ",d$species)
test  = sub("\\.[.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]"," ",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]"," ",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]*"," ",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]*\\."," ",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]* \\.*"," ",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]* [\\.]*"," ",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]* \\."," ",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]* \\."," ",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]*"," ",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]*\\."," ",d$species)
test  = sub("\\.[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]*\\.*"," ",d$species)
?strsplit()
strsplit(d$species,"\\.")
d$genus = sapply(d$genus,strsplit("\\.")[1])
d$genus = sapply(d$genus,function(x) {strsplit(x,"\\.")[1]})
d$genus = lapply(d$genus,function(x) {strsplit(x,"\\.")[1]})
